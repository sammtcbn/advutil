#!/bin/bash
# https://github.com/sammtcbn/advutil
# Written by sammtcbn 2020.6.8
ME=$(basename $0)
HTTP_IP=localhost
HTTP_PORT=3000

USAGE_STR="$(cat <<EOF
Usage: ${ME} [OPTION]...

OPTIONS
  -i <HTTP Server IP>
      assign HTTP server ip, default is ${HTTP_IP}

  -p <HTTP Server Port>
      assign HTTP server port, default is ${HTTP_PORT}

  -c <Command>
      senhublist - get all senhub list
      devinfo    - get device information
      agentst    - get wiseagent status
      agentinfo  - get wiseagent information
      agentctl   - service control for wiseagent
                   * need to assign Action with -a
                   * ex: apigwrest -c srvctl -a restart
      srvlist    - get service list
      srvctl     - service control
                   * need to assign Action with -a
                   * need to assign Service Name with -s
                   * ex: apigwrest -c srvctl -a restart -s service1
      infoall    - get all information, sucn as devinfo, agentst, agentinfo, srvlist

  -a <Action>
      start / stop / restart

  -s <Service Name>

  -h  display this help and exit
 
EOF
)"

function usage() {
    echo "$USAGE_STR"
    exit 0
}

function f_allsenhublist() {
    cmds="curl -s http://${HTTP_IP}:${HTTP_PORT}/restapi/WSNManage/SenHub/AllSenHubList | python3 -m json.tool"
    eval ${cmds}
}

function f_devinfo() {
    cmds="curl -s http://${HTTP_IP}:${HTTP_PORT}/rmm/v1/device/info | python3 -m json.tool"
    #echo ${cmds}
    eval ${cmds}
}

function f_agentst() {
    cmds="curl -s http://${HTTP_IP}:${HTTP_PORT}/rmm/v1/wiseagent/status | python3 -m json.tool"
    eval ${cmds}
}

function f_agentinfo() {
    cmds="curl -s http://${HTTP_IP}:${HTTP_PORT}/rmm/v1/wiseagent/servicekey | python3 -m json.tool"
    eval ${cmds}
}

function f_agentctl() {
    chk_service_action
    cmds="curl -X PUT -H \"Content-Type: application/json\" -d '{\"action\": \"${ACTION}\"}'  http://${HTTP_IP}:${HTTP_PORT}/rmm/v1/wiseagent/ctrl"
    #echo ${cmds}
    eval ${cmds}
}

function f_srvlist() {
    cmds="curl -s http://${HTTP_IP}:${HTTP_PORT}/rmm/v1/service/list | python3 -m json.tool"
    eval ${cmds}
}

function chk_service_action(){
    if [ -z "${ACTION}" ]; then
        usage
    fi

    if [ "${ACTION}" != "start" ] && [ "${ACTION}" != "stop" ] && [ "${ACTION}" != "restart" ]; then
        usage
    fi
}

function f_srvctl() {
    chk_service_action
    if [ -z "${SERVICE_NAME}" ]; then
        usage
    fi

    cmds="curl -X PUT -H \"Content-Type: application/json\" -d '{\"ServiceName\": \"${SERVICE_NAME}\", \"Action\": \"${ACTION}\"}'  http://${HTTP_IP}:${HTTP_PORT}/rmm/v1/service/ctrl"
    #echo ${cmds}
    eval ${cmds}
}

while getopts "a:c:hi:p:s:" opt; do
    case $opt in
    a)
       ACTION=$OPTARG
       ;;
    c)
       CMD=$OPTARG
       ;;
    h)
       usage
       ;;
    i)
       HTTP_IP=$OPTARG
       ;;
    p)
       HTTP_PORT=$OPTARG
       ;;
    s)
       SERVICE_NAME=$OPTARG
       ;;
    esac
done

#echo HTTP server = ${HTTP_IP}:${HTTP_PORT}

if [ -z "${CMD}" ]; then
    usage
fi

if [ "${CMD}" == "senhublist" ]; then
    f_allsenhublist
elif [ "${CMD}" == "devinfo" ]; then
    f_devinfo
elif [ "${CMD}" == "agentst" ]; then
    f_agentst
elif [ "${CMD}" == "agentinfo" ]; then
    f_agentinfo
elif [ "${CMD}" == "agentctl" ]; then
    f_agentctl
elif [ "${CMD}" == "srvlist" ]; then
    f_srvlist
elif [ "${CMD}" == "srvctl" ]; then
    f_srvctl
elif [ "${CMD}" == "infoall" ]; then
    f_allsenhublist
    f_devinfo
    f_agentst
    f_agentinfo
    f_srvlist
else
    usage
fi

